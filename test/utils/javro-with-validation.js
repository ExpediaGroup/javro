/*
 * Copyright 2019-2021 Expedia, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

const Ajv = require('ajv');
const avsc = require('avsc');
const fs = require('fs').promises;
const Promise = require('promise');
const $RefParser = require('json-schema-ref-parser');
const { javro } = require('../../src/javro');

module.exports = function javroWithValidation(expectedAvroFile, options) {
  const deReferencedSchema = $RefParser.dereference(options.jsonSchemaFile, options.jsonSchema);
  const actualAvro = javro(options);
  const expectedAvro = fs.readFile(expectedAvroFile, { encoding: 'UTF-8' });

  return Promise.all([deReferencedSchema, actualAvro, expectedAvro])
    .then((res) => {
      // Validate the input JSON Schema
      const ajv = new Ajv();
      ajv.compile(res[0]);

      // Validate the resulting avro generated by Javro
      avsc.Type.forSchema(res[1].avsc);

      // Return the actual and expected Avro to compare in the test case
      return { actualAvro: res[1].avsc, expectedAvro: JSON.parse(res[2]) };
    });
};
